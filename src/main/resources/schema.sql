DROP TABLE IF EXISTS
users, film_genre, films, friends, likes, genre, rating;
 CREATE TABLE IF NOT EXISTS friends(
  following_user_id integer,
  followed_user_id integer,
  PRIMARY KEY (following_user_id, followed_user_id)
);

 CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar,
  login varchar,
  name varchar,
  birthday date
);

 CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar,
  release_date date,
  duration integer,
  rating_id integer
);

 CREATE TABLE IF NOT EXISTS genre (
  genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre varchar
);

 CREATE TABLE IF NOT EXISTS likes (
  user_id integer,
  film_id integer,
  PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id integer,
  genre_id integer,
  PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS rating (
  rating_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rating_name varchar
);


ALTER TABLE friends ADD FOREIGN KEY (following_user_id) REFERENCES users (id);

ALTER TABLE friends ADD FOREIGN KEY (followed_user_id) REFERENCES users (id);

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (id);

ALTER TABLE film_genre ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id);

ALTER TABLE film_genre ADD FOREIGN KEY (film_id) REFERENCES films (id);

ALTER TABLE films ADD FOREIGN KEY (rating_id) REFERENCES rating (rating_id);
